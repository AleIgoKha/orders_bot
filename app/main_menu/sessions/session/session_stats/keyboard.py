from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from calendar import monthrange
from datetime import date

stats_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üëåüèΩ –ü–æ –≤—ã–¥–∞–Ω–Ω—ã–º –∑–∞–∫–∞–∑–∞–º', callback_data='stats_menu:issued')],
    [InlineKeyboardButton(text='‚öôÔ∏è –ü–æ –ù–ï –≤—ã–¥–∞–Ω–Ω—ã–º', callback_data='stats_menu:not_issued')],
    [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='back_from_order_stats')]
    ])

session_stats = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='session:stats_menu')]
    ])


# –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
def create_calendar_keyboard(callback_name, year: int, month: int) -> InlineKeyboardMarkup:
    """
    Creates an inline keyboard representing a calendar for the given year and month.
    """
    keyboard = []
    months = {
    1: "–Ø–Ω–≤–∞—Ä—å",
    2: "–§–µ–≤—Ä–∞–ª—å",
    3: "–ú–∞—Ä—Ç",
    4: "–ê–ø—Ä–µ–ª—å",
    5: "–ú–∞–π",
    6: "–ò—é–Ω—å",
    7: "–ò—é–ª—å",
    8: "–ê–≤–≥—É—Å—Ç",
    9: "–°–µ–Ω—Ç—è–±—Ä—å",
    10: "–û–∫—Ç—è–±—Ä—å",
    11: "–ù–æ—è–±—Ä—å",
    12: "–î–µ–∫–∞–±—Ä—å"}
    keyboard.append([InlineKeyboardButton(text=f'{year} {months[month]}', callback_data="ignore")])
    days_of_week = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    keyboard.append([InlineKeyboardButton(text=day, callback_data="ignore") for day in days_of_week])

    first_day = date(year, month, 1)
    first_day_weekday = first_day.weekday()  # Monday is 0, Sunday is 6
    days_in_month = monthrange(year, month)[1]
    day_counter = 1

    for week in range(6):  # Up to 6 weeks can be displayed
        row = []
        for day_of_week in range(7):
            if week == 0 and day_of_week < first_day_weekday:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            elif day_counter > days_in_month:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                day_text = str(day_counter)
                if day_counter == date.today().day and month == date.today().month and year == date.today().year:
                    day_text += ' üåû'
                callback_data = f"stats_menu:{callback_name}:date:{year}:{month}:{day_counter}"
                row.append(InlineKeyboardButton(text=day_text, callback_data=callback_data))
                day_counter += 1
        keyboard.append(row)
        if day_counter > days_in_month:
            break
    
    additional_buttons = [
        InlineKeyboardButton(text='üìä –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è', callback_data=f'stats_menu:{callback_name}:total_stats')
    ]

    keyboard.append(additional_buttons)

    navigation_buttons = [
        InlineKeyboardButton(text="‚¨ÖÔ∏è –†–∞–Ω–µ–µ", callback_data=f"stats_menu:month:prev:{year}:{month}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="session:stats_menu"),
        InlineKeyboardButton(text="‚û°Ô∏è –ü–æ–∑–¥–Ω–µ–µ", callback_data=f"stats_menu:month:next:{year}:{month}"),
    ]
    keyboard.append(navigation_buttons)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)