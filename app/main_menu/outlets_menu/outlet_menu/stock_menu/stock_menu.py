from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

import app.main_menu.outlets_menu.outlet_menu.stock_menu.keyboard as kb
from app.main_menu.main_menu import main_menu_handler 
from app.states import Outlet
from app.database.requests import get_stock_products

stock_menu = Router()


# –º–µ–Ω—é –æ–ø–µ—Ä–∞—Ü–∏–π —Ç–æ—Ä–æ–≥–æ–≤–æ–π —Ç–æ—á–∫–∏
@stock_menu.callback_query(F.data == 'outlet:stock')
async def operations_menu_handler(callback: CallbackQuery):
    await callback.message.edit_text(text='üì¶ <b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ü–ê–°–ê–ú–ò</b>',
                                     reply_markup=kb.stock_menu,
                                     parse_mode='HTML')


# –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø–∞—Å–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ
@stock_menu.callback_query(F.data.startswith('outlet:replenishment:product_page_'))
@stock_menu.callback_query(F.data == 'outlet:replenishment')
async def replenishment_handler(callback: CallbackQuery, state: FSMContext):
    if callback.data.startswith('outlet:replenishment:product_page_'):
        try:
            page = int(callback.data.split('_')[-1])
        except ValueError:
            return None
    else:
        page = 1
    
    data = await state.get_data()
    outlet_id = data['outlet_id']
    stock_data = await get_stock_products(outlet_id)
    
    await callback.message.edit_text(text='‚ùì <b>–í–´–ë–ï–†–ò–¢–ï –¢–û–í–ê–† –î–õ–Ø –ü–û–ü–û–õ–ù–ï–ù–ò–Ø</b>',
                                     reply_markup=kb.choose_product_replenishment(products=stock_data, page=page),
                                     parse_mode='HTML')